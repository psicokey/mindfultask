// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql" // MariaDB usa el provider de mysql
  url      = env("DATABASE_URL")
}

model User {
  user_id    Int      @id @default(autoincrement())
  name       String
  email      String   @unique
  password   String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  pomodoroSessions PomodoroSession[]
  tasks            Task[]

  @@map("users")
}

model PomodoroSession {
  session_id       Int      @id @default(autoincrement())
  duration         Int
  cycles_completed Int
  completed_at     DateTime @default(now())
  userId           Int
  user             User     @relation(fields: [userId], references: [user_id])

  @@map("pomodoro_sessions")
}

model Task {
  id           Int      @id @default(autoincrement())
  title        String
  description  String?  // Opcional, puede ser nulo
  due_date     DateTime? // Opcional, fecha de vencimiento
  priority     String   @default("medium") // Podría ser "low", "medium", "high"
  is_completed Boolean  @default(false)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  // Relación con el modelo User
  userId       Int
  user         User @relation(fields: [userId], references: [user_id])

  @@map("tasks") // Mapea este modelo a una tabla llamada 'tasks' en la base de datos
}
