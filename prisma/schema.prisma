// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql" // MariaDB usa el provider de mysql
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid()) // Cambiado de Int @id @default(autoincrement()) a String @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  password      String? // Campo para contraseñas locales
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  accounts      Account[]
  sessions      Session[]
  tasks         Task[]
  pomodoroSessions PomodoroSession[]

  @@map("users")
}

model Account {
  id                String  @id @default(cuid())
  userId            String  @map("user_id") // Cambiado a String
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id") // Cambiado a String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model Task {
  id          Int       @id @default(autoincrement())
  title       String
  description String?
  due_date    DateTime?
  priority    String    @default("medium") // 'low', 'medium', 'high'
  is_completed Boolean   @default(false)
  userId      String    @map("user_id") // Cambiado a String
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@map("tasks")
}

model PomodoroSession {
  id                  Int      @id @default(autoincrement())
  duration            Int      // Duración total en segundos (puede mantenerse o recalcularse)
  work_duration_seconds Int    // Nuevo: Duración total de los periodos de trabajo en segundos
  break_duration_seconds Int   // Nuevo: Duración total de los periodos de descanso en segundos
  cycles_completed    Int      // Número de ciclos completados en esta sesión
  userId              String   @map("user_id") // Cambiado a String
  user                User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt           DateTime @default(now())

  @@map("pomodoro_sessions")
}